
@{
    ViewData["Title"] = "OpenL";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="map" class="map"></div>
<form class="form-inline">
    <label>Action type &nbsp;</label>
    <select id="type" class="form-control">
        <option value="click" selected>Click</option>
        <option value="singleclick">Single-click</option>
        <option value="pointermove">Hover</option>
        <option value="altclick">Alt+Click</option>
        <option value="none">None</option>
    </select>
    <span id="status">&nbsp;0 selected features</span>
</form>
<script>
    var raster = new ol.layer.Tile({
        source: new ol.source.OSM()
    });

    var vector = new ol.layer.Vector({
        source: new ol.source.Vector({
            url: 'https://opendata.arcgis.com/datasets/67a8ff23b5f54f15b7133b8c30981441_0.geojson',
            format: new ol.format.GeoJSON()
        })
    });

    var map = new ol.Map({
        layers: [raster, vector],
        target: 'map',
        interactions: ol.interaction.defaults({
            doubleClickZoom: false,
            dragAndDrop: false,
            dragpan: false,
            keyboardPan: false,
            keyboardZoom: false,
            mouseWheelZoom: false,
            pointer: false,
            select: false
        }),
        view: new ol.View({
            center: [0, 0],
            zoom: 2
        })
    });

    for (var i = 0; i < map.controls.length; i++) {
        if (map.controls[i].displayClass ==
            "olControlNavigation") {
            map.controls[i].deactivate();
        }
    }

    var select = null;  // ref to currently selected interaction

    // select interaction working on "singleclick"
    var selectSingleClick = new ol.interaction.Select();

    // select interaction working on "click"
    var selectClick = new ol.interaction.Select({
        condition: ol.events.condition.click
    });

    // select interaction working on "pointermove"
    var selectPointerMove = new ol.interaction.Select({
        condition: ol.events.condition.pointerMove
    });

    var selectAltClick = new ol.interaction.Select({
        condition: function (mapBrowserEvent) {
            return ol.events.condition.click(mapBrowserEvent) &&
                ol.events.condition.altKeyOnly(mapBrowserEvent);
        }
    });

    var selectElement = document.getElementById('type');

    var changeInteraction = function () {
        if (select !== null) {
            map.removeInteraction(select);
        }
        var value = selectElement.value;
        if (value == 'singleclick') {
            select = selectSingleClick;
        } else if (value == 'click') {
            select = selectClick;
        } else if (value == 'pointermove') {
            select = selectPointerMove;
        } else if (value == 'altclick') {
            select = selectAltClick;
        } else {
            select = null;
        }
        if (select !== null) {
            map.addInteraction(select);
            select.on('select', function (e) {
                document.getElementById('status').innerHTML = '&nbsp;' +
                    e.target.getFeatures().getLength() +
                    ' selected features (last operation selected ' + e.selected.length +
                    ' and deselected ' + e.deselected.length + ' features)';
            });
        }
    };


    /**
     * onchange callback on the select element.
     */
    selectElement.onchange = changeInteraction;
    changeInteraction();
</script>
